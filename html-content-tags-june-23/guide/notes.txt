HTML5 CONTENT TAGS - STUDY NOTES
================================

1. HEADINGS (h1-h6)
------------------
- Six levels of headings: h1 (most important) to h6 (least important)
- Semantic hierarchy: h1 > h2 > h3 > h4 > h5 > h6
- SEO Best Practice: Use only ONE h1 per page
- Accessibility: Screen readers use headings for navigation
- Don't skip levels (h1 → h2 → h3, not h1 → h3)
- Use for structure, not styling

Example:
<h1>Main Title</h1>
<h2>Section Title</h2>
<h3>Subsection Title</h3>

2. PARAGRAPHS (p)
----------------
- Block-level element for text content
- Automatically adds margin above and below
- Can contain inline elements (strong, em, a, span, etc.)
- Should focus on one main idea
- Optimal length: 2-3 sentences for web readability

Example:
<p>This is a paragraph with <strong>bold</strong> and <em>italic</em> text.</p>

3. SPAN ELEMENT
--------------
- Inline container for styling or grouping text
- No semantic meaning by itself
- Used with CSS classes or IDs
- Perfect for highlighting specific words/phrases
- Can contain other inline elements

Example:
<p>This text has a <span class="highlight">highlighted word</span>.</p>

4. IMAGES (img)
--------------
- Self-closing tag: <img src="..." alt="...">
- Required attributes: src (source) and alt (alternative text)
- Alt text: Essential for accessibility and SEO
- Optional attributes: width, height, title
- Use <figure> and <figcaption> for images with captions

Best Practices:
- Always include meaningful alt text
- Use descriptive filenames
- Optimize file sizes for web
- Choose appropriate formats (JPEG for photos, PNG for graphics)

Example:
<img src="image.jpg" alt="Description of the image">
<figure>
  <img src="chart.png" alt="Sales data chart">
  <figcaption>Monthly sales figures for 2023</figcaption>
</figure>

5. LISTS
--------

A) UNORDERED LISTS (ul)
- For items without specific order
- Default bullet points
- Can be nested
- List items use <li> tags

<ul>
  <li>First item</li>
  <li>Second item</li>
</ul>

B) ORDERED LISTS (ol)
- For sequential or ranked items
- Default numbering (1, 2, 3...)
- Can start from custom number with 'start' attribute
- Can be nested

<ol>
  <li>First step</li>
  <li>Second step</li>
</ol>

<ol start="5">
  <li>Fifth item</li>
  <li>Sixth item</li>
</ol>

C) DESCRIPTION LISTS (dl)
- For term-definition pairs
- Uses <dt> for terms and <dd> for descriptions
- Good for glossaries, FAQs

<dl>
  <dt>Term</dt>
  <dd>Definition of the term</dd>
</dl>

ACCESSIBILITY GUIDELINES
========================
1. Use semantic HTML elements correctly
2. Include alt text for all images
3. Maintain proper heading hierarchy
4. Use lists for grouped information
5. Ensure good color contrast
6. Test with screen readers

SEO BEST PRACTICES
=================
1. One h1 per page with main keyword
2. Use h2-h6 for content structure
3. Write descriptive alt text for images
4. Use semantic markup appropriately
5. Keep content organized with proper tags

COMMON MISTAKES TO AVOID
=======================
1. Using headings for styling instead of structure
2. Skipping heading levels
3. Missing alt text on images
4. Using <br> instead of <p> for paragraphs
5. Overusing <span> when semantic elements exist
6. Not nesting lists properly

VALIDATION AND TESTING
======================
- Use W3C HTML validator
- Test with screen readers
- Check browser compatibility
- Validate accessibility with tools like WAVE
- Test responsive behavior on different devices

MODERN HTML5 FEATURES
====================
- Semantic elements (header, nav, main, article, section, aside, footer)
- Better accessibility support
- Improved form elements
- Native audio/video support
- Canvas for graphics
- Local storage capabilities

Remember: Write semantic, accessible HTML that follows web standards!
